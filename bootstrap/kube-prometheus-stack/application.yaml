apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
spec:
  project: default
  destination:
    server: "https://kubernetes.default.svc"
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      allowEmpty: true
      selfHeal: true
      replace: true
    syncOptions:
      - ServerSideApply=true
      - CreateNamespace=true
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 46.8.0
    helm:
      releaseName: prometheus-stack
      values: |
        hostRootFsMount:
          enabled: false
          mountPropagation: HostToContainer
        alertmanager:
          enabled: true
          fullnameOverride: alertmanager
          ingress:
            enabled: false
        coreDns:
          enabled: true
        defaultRules:
          create: true
          rules:
            alertmanager: true
            configReloaders: true
            etcd: true
            general: true
            k8s: true
            kubeApiserverAvailability: true
            kubeApiserverBurnrate: true
            kubeApiserverHistogram: true
            kubeApiserverSlos: true
            kubePrometheusGeneral: true
            kubePrometheusNodeRecording: true
            kubeProxy: true
            kubeScheduler: true
            kubeStateMetrics: true
            kubelet: true
            kubernetesApps: true
            kubernetesResources: true
            kubernetesStorage: true
            kubernetesSystem: true
            network: true
            node: true
            nodeExporterAlerting: true
            nodeExporterRecording: true
            prometheus: true
            prometheusOperator: true
        fullnameOverride: prometheus
        grafana:
          admin:
            existingSecret: grafana-admin-credentials
            passwordKey: admin-password
            userKey: admin-user
          defaultDashboardsEnabled: true
          defaultDashboardsTimezone: utc
          enabled: true
          forceDeployDashboards: false
          forceDeployDatasources: false
          fullnameOverride: grafana
          serviceMonitor:
            enabled: true
        kube-state-metrics:
          fullnameOverride: kube-state-metrics
          prometheus:
            monitor:
              enabled: true
              relabelings:
                - action: replace
                  regex: (.*)
                  replacement: $1
                  sourceLabels:
                    - __meta_kubernetes_pod_node_name
                  targetLabel: kubernetes_node
          selfMonitor:
            enabled: true
        kubeApiServer:
          enabled: true
        kubeEtcd:
          enabled: true
          service:
            targetPort: 2381
        kubeControllerManager:
          enabled: true
          service:
            targetPort: 10257
        kubeScheduler:
          service:
            targetPort: 10259
        kubeDns:
          enabled: false
        kubeProxy:
          enabled: true
        kubeScheduler:
          enabled: true
        kubeStateMetrics:
          enabled: true
        kubelet:
          enabled: true
          serviceMonitor:
            metricRelabelings:
              - action: replace
                sourceLabels:
                  - node
                targetLabel: instance
        nodeExporter:
          enabled: true
          serviceMonitor:
            relabelings:
              - action: replace
                regex: (.*)
                replacement: $1
                sourceLabels:
                  - __meta_kubernetes_pod_node_name
                targetLabel: kubernetes_node
        prometheus:
          enabled: true
          prometheusSpec:
            enableAdminAPI: true
            podMonitorSelectorNilUsesHelmValues: false
            probeSelectorNilUsesHelmValues: false
            replicaExternalLabelName: replica
            replicas: 1
            retention: 6h
            ruleSelectorNilUsesHelmValues: false
            serviceMonitorSelectorNilUsesHelmValues: false
            walCompression: true
        prometheus-node-exporter:
          extraArgs:
            - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
            - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
          fullnameOverride: node-exporter
          podLabels:
            jobLabel: node-exporter
          prometheus:
            monitor:
              enabled: true
              relabelings:
                - action: replace
                  regex: (.*)
                  replacement: $1
                  sourceLabels:
                    - __meta_kubernetes_pod_node_name
                  targetLabel: kubernetes_node
          resources:
            limits:
              memory: 2048Mi
            requests:
              cpu: 250m
              memory: 512Mi
          service:
            portName: http-metrics
        prometheusOperator:
          enabled: true
          prometheusConfigReloader:
            resources:
              limits:
                memory: 100Mi
              requests:
                cpu: 200m
                memory: 50Mi
        thanosRuler:
          enabled: false
