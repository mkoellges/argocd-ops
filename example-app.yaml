---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: example-app
  namespace: argocd
  # Finalizer that ensures that project is not deleted until it is not referenced by any application
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  # Project description
  description: Example App Project

  # Allow manifests to deploy from any Git repos
  sourceRepos:
  - '*'

  # Only permit applications to deploy to the guestbook namespace in the same cluster
  # Destination clusters can be identified by 'server', 'name', or both.
  destinations:
  - namespace: example-app
    server: https://kubernetes.default.svc
    name: in-cluster

  # Deny all cluster-scoped resources from being created, except for Namespace
  clusterResourceWhitelist:
  - group: ''
    kind: Namespace

  # Allow all namespaced-scoped resources to be created, except for ResourceQuota, LimitRange, NetworkPolicy
  namespaceResourceBlacklist:
  - group: ''
    kind: ResourceQuota
  - group: ''
    kind: LimitRange
  - group: ''
    kind: NetworkPolicy

  # Deny all namespaced-scoped resources from being created, except for Deployment and StatefulSet
  namespaceResourceWhitelist:
  - group: 'apps'
    kind: Deployment
  - group: 'apps'
    kind: StatefulSet

  # Enables namespace orphaned resource monitoring.
  orphanedResources:
    warn: false

  roles:
  # A role which provides read-only access to all applications in the project
  - name: read-only
    description: Read-only privileges to my-project
    policies:
    - p, proj:my-project:read-only, applications, get, my-project/*, allow
    groups:
    - my-oidc-group

  # A role which provides sync privileges to only the guestbook-dev application, e.g. to provide
  # sync privileges to a CI system
  - name: ci-role
    description: Sync privileges for guestbook-dev
    policies:
    - p, proj:my-project:ci-role, applications, sync, my-project/guestbook-dev, allow

  # Sync windows restrict when Applications may be synced. https://argo-cd.readthedocs.io/en/stable/user-guide/sync_windows/
  syncWindows:
  - kind: allow
    schedule: '10 1 * * *'
    duration: 1h
    applications:
      - '*-prod'
    manualSync: true
  - kind: deny
    schedule: '0 22 * * *'
    duration: 1h
    namespaces:
      - default
  - kind: allow
    schedule: '0 23 * * *'
    duration: 1h
    clusters:
      - in-cluster

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: dev
  annotations:
    argocd.argoproj.io/sync-wave: "3"
  namespace: argocd
spec:
  project: example-app
  source:
    repoURL: https://github.com/mkoellges/example-app.git
    targetRevision: HEAD
    path: k8s/overlay/dev
  destination:
    server: https://kubernetes.default.svc
    namespace: example-app-dev
  syncPolicy:
    automated:
      prune: true
      selfHeal: true

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: staging
  annotations:
    argocd.argoproj.io/sync-wave: "3"
  namespace: argocd
spec:
  project: example-app
  source:
    repoURL: https://github.com/mkoellges/example-app.git
    targetRevision: HEAD
    path: k8s/overlay/staging
  destination:
    server: https://kubernetes.default.svc
    namespace: example-app-staging
  syncPolicy:
    automated:
      prune: true
      selfHeal: true

---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: production
  annotations:
    argocd.argoproj.io/sync-wave: "3"
  namespace: argocd
spec:
  project: example-app
  source:
    repoURL: https://github.com/mkoellges/example-app.git
    targetRevision: HEAD
    path: k8s/overlay/production
  destination:
    server: https://kubernetes.default.svc
    namespace: example-app-production
  syncPolicy:
    automated:
      prune: true
      selfHeal: true